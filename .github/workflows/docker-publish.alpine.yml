name: Docker Build Multiplatform (Alpine)

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - dev

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: mail-service
  IMAGE_TYPE: alpine

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    defaults:
      run:
        working-directory: .

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - run: npm ci

      - run: npm run test:ci

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  docker-build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: unit-tests

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Prepare multiarch docker
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      
      - name: Builder create
        run: docker buildx create --use      

      - name: Build image
        run: |
          IMAGE_ID=ghcr.io/${{ github.actor }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          VERSION=$(cat version)
          
          echo TAG=$IMAGE_ID:$VERSION-$IMAGE_TYPE

          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          docker buildx build --push \
            --tag $IMAGE_ID:$VERSION-$IMAGE_TYPE  \
            --platform linux/amd64,linux/arm/v7,linux/arm64 \
            --file docker/Dockerfile.alpine \
            .